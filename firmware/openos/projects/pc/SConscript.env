import os

Import('env')

#======================== Help text =============================
Help(os.linesep.join(('PC options:',
                      '',
                    ))
    )


#======================== Project setup =========================

# create build environment
buildEnv = env.Clone()

# inherit environment from user (PATH, etc)
buildEnv['ENV'] = os.environ

# choose bsp. Normally this would be the same as the project name,
# however, there are cases where one might want to make separate build
# configuration for the same board.
buildEnv['BSP'] = buildEnv['PROJECT']

flags = '-O2'

buildEnv.Append(CCFLAGS = flags)
buildEnv.Append(LINKFLAGS = flags)
buildEnv.Append(ARFLAGS = '')
buildEnv.Append(RANLIBFLAGS = '')

# PostBuildExtras is a method called after build of a firmware target (not libraries).
# Put any addition steps in this function, such as converting to ihex or copying the
# binary somewhere.
def extras(env, source):
    return source
buildEnv.AddMethod(extras, 'PostBuildExtras')


#======================== Private ===============================


Return('buildEnv')