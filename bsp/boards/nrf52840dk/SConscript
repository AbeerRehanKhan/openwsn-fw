import os

# for debugging
# import pdb
# pdb.set_trace()

Import('env')

localEnv = env.Clone()

source   = \
    Glob('sdk/components/boards/boards.c') + \
    Glob('sdk/components/libraries/experimental_section_vars/*.c') + \
    Glob('sdk/components/libraries/pwr_mgmt/*.c') + \
    Glob('sdk/components/libraries/uart/app_uart.c') + \
    Glob('sdk/components/libraries/util/app_util_platform.c') + \
    Glob('sdk/integration/nrfx/legacy/nrf_drv_uart.c') + \
    Glob('sdk/modules/nrfx/drivers/src/nrfx_clock.c') + \
    Glob('sdk/modules/nrfx/drivers/src/nrfx_power.c') + \
    Glob('sdk/modules/nrfx/drivers/src/nrfx_rtc.c') + \
    Glob('sdk/modules/nrfx/drivers/src/nrfx_spi.c') + \
    Glob('sdk/modules/nrfx/drivers/src/nrfx_uart.c') + \
    Glob('sdk/modules/nrfx/mdk/gcc_startup_nrf52840.S') + \
    Glob('sdk/modules/nrfx/mdk/system_nrf52840.c') + \
    Glob('sdk/components/drivers_nrf/radio_config/radio_config.c') + \
    Glob('sdk/components/proprietary_rf/esb/nrf_esb.c') + \
    Glob('*.c')

localEnv.Append(
    CPPPATH =  [
        os.path.join('#','bsp','boards','nrf52840dk'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','config','nrf52840','config'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','integration','nrfx'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','toolchain','cmsis','include'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','drivers_nrf','nrf_soc_nosd'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','libraries','atomic'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','libraries','balloc'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','libraries','delay'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','libraries','experimental_log'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','libraries','experimental_log','src'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','libraries','experimental_memobj'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','libraries','experimental_section_vars'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','libraries','mutex'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','libraries','uart'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','libraries','util'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','integration','nrfx','legacy'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','modules','nrfx'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','modules','nrfx','drivers'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','modules','nrfx','drivers','include'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','modules','nrfx','drivers','src'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','modules','nrfx','drivers','src','prs'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','modules','nrfx','hal'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','modules','nrfx','mdk'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','modules','nrfx','soc'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','modules','nrfx','templates'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','drivers_nrf','radio_config'),
        os.path.join('#','bsp','boards','nrf52840dk','sdk','components','proprietary_rf','esb'),
#        os.path.join('#','bsp','boards','nrf52840dk','sdk','modules','nrfx','templates','nRF52840'),
    ],
)

# print localEnv['CPPPATH']

board  = localEnv.Object(source=source)

Return('board')
